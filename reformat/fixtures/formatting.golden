Comma Expression:
SELECT *
FROM plugin()
WHERE dict(foo=[1, ])



Comma Expression 2:
SELECT *
FROM plugin()
WHERE (1, 2, 3, 4)



Group by with many columns:
SELECT min(item=EventTime) AS EarliestTime
FROM source(artifact="Exchange.Windows.Detection.ISOMount")
GROUP BY Computer, Username, EventID, Filename



Plugin with long first arg:
SELECT *
FROM Artifact.Windows.EventLogs.EvtxHunter(
  EvtxGlob='''%SystemRoot%\System32\Winevt\Logs\*Sysmon*.evtx''')



If Plugin:
LET DateAfterTime <= if(
    condition=TargetTime,
    then=timestamp(epoch=TargetTime.Unix - TargetTimeBox),
    else=timestamp(epoch=now() - TargetTimeBox))



If Plugin with longer args:
LET DateAfterTime <= if(
    condition=TargetTime,
    then=timestamp(epoch=TargetTime.Unix - TargetTimeBox + SomeConstant),
    else=timestamp(epoch=now() - TargetTimeBox))



Try to fit plugin args in one line:
LET CacheList = SELECT FullPath
  FROM glob(globs=GlobPath, root=RootPath)



If plugin args break lines line up on (:
LET CacheList = SELECT FullPath
  FROM glob(globs=GlobPath,
            follow_symlinks=TRUE,
            another_long_arg=54,
            root="C:/Windows/System32/")



If plugin args are too long to line up on ( they get indent more:
LET CacheList = SELECT FullPath
  FROM glob(
    globs=Glob,
    follow_symlinks=TRUE,
    another_long_arg=54,
    root="C:/Windows/System32/Foobar/Config/Registry/Some/Long/Path/And/Along/Path")



Try to keep function args in one line:
LET CacheList = SELECT FullPath
  FROM glob(globs=split(string=CacheGlob, sep=","), root=RootPath)



Example:
LET CacheList = SELECT FullPath
  FROM glob(globs=Glob, root=RootPath)



LET expression:
LET Foo = SELECT *
  FROM info()
  WHERE Foo
  GROUP BY 1



LET with parameters:
LET Foo(x, y, z) = SELECT *
  FROM info()
  WHERE Foo
  GROUP BY 1



Nesting:
SELECT *
FROM foreach(
  row={
    SELECT *
    FROM foreach(
      row={
        SELECT *
        FROM info
      },
      query={
        SELECT *
        FROM info()
      })
  },
  query=ForeachQuery(X=1))



Foreach:
SELECT *
FROM foreach(
  row={
    SELECT *
    FROM clients()
    LIMIT 5 
  },
  query={
    SELECT client_info(client_id=client_id)
    FROM glob(globs=AGlob)
  })



Subquery:
SELECT {
         SELECT *
         FROM info()
       } AS Foo,
       Bar
FROM scope()



Simple Statement:
SELECT A AS First,
       B AS Second,
       C,
       D
FROM info(arg=1, arg2=3)
WHERE 1
ORDER BY C
LIMIT 1 



